CREATE TABLE IF NOT EXISTS subscription (
    id BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    hotel_id BIGINT,
    next_payment_on DATE,
    start_date DATE,
    end_date DATE,
    term SMALLINT,
    status SMALLINT,
    CHECK (status >= 0 AND status <= 2),
    CHECK (term >= 0 AND term <= 1)
);

CREATE TABLE IF NOT EXISTS subscription_audit (
    audit_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    subscription_id BIGINT,
    old_status SMALLINT,
    new_status SMALLINT,
    change_timestamp TIMESTAMP
);

CREATE OR REPLACE FUNCTION subscription_audit_trigger_function() RETURNS TRIGGER AS '
BEGIN
    IF OLD.status IS DISTINCT FROM NEW.status THEN
        INSERT INTO subscription_audit (subscription_id, old_status, new_status, change_timestamp)
        VALUES (NEW.id, OLD.status, NEW.status, CURRENT_TIMESTAMP);
    END IF;
    RETURN NEW;
END;
' LANGUAGE plpgsql;


CREATE OR REPLACE TRIGGER subscription_audit_trigger
BEFORE UPDATE ON subscription
FOR EACH ROW
EXECUTE FUNCTION subscription_audit_trigger_function();


